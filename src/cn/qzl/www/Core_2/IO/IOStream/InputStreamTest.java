package cn.qzl.www.Core_2.IO.IOStream;import java.io.FileInputStream;import java.io.IOException;import java.io.InputStream;/** * @Author qzl * @Description * InputStream并不是一个接口，而是一个抽象类，它是所有输入流的超类。这个抽象类定义的一个 * 最重要的方法就是int read()， * @Since 2020-05-19 9:33 */public class InputStreamTest {    public static void main(String[] args) throws IOException {        //int read()方法会读取输入流的下一个字节，并返回字节表示的int值（0~255）。如果已读到末尾，返回-1表示不能继续读取了。        //FileInputStream是InputStream的一个子类。FileInputStream就是从文件流中读取数据        InputStream in_1 = new FileInputStream("D:\\Java\\code\\练习\\src\\cn\\qzl\\www\\Core_2\\IO\\IOStream\\Test.txt");        //循环读取前十个字节，并打印byte值        for (int i = 0; i < 10; i++) {            int n = in_1.read();            if(n == -1) break;            System.out.println((char)n);        }        System.out.println("----------------------------------------");        //int read(byte[] b)：读取若干字节并填充到byte[]数组，返回读取的字节数        //int read(byte[] b, int off, int len)：指定byte[]数组的偏移量和最大填充数        //available可检查可读入数量        int byteAvailable;        byte[] buffer = new byte[1000];       //缓冲区        int n;        byteAvailable = in_1.available();        System.out.println("此次可读入数量是："+byteAvailable);        while ((n = in_1.read(buffer)) != -1){            System.out.println("读取"+n+"字节");            byteAvailable = in_1.available();            System.out.println("此次可读入数量是："+byteAvailable);        }        //关闭流        in_1.close();    }}